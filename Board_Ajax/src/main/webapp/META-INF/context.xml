<Context>
  <Resource
   name="jdbc/OracleDB"
   auth="Container"
   type="javax.sql.DataSource"
   username="scott"
   password="tiger"
   driverClassName="oracle.jdbc.driver.OracleDriver"
   factory="org.apache.tomcat.dbcp.dbcp2.BasicDataSourceFactory"
   url="jdbc:oracle:thin:@127.0.0.1:1521:xe"
   />
   
</Context>
 <!-- 
 context.xml 파일은 단일 Tomcat 웹 응용 프로그램에 대한
 <Context> 태그를 포함하는 선택적 파일이다.
 이것은 응용 프로그램, JNDI 자원 및 기타 설정에 대한 특정 동작을 정의하는 데 사용할 수 있다.
 context.xml 파일은 META-INF 폴더에 설치해야 한다.
 
 1.name="jdbc/OracleDB"
   JNDI로 호출될 이름을 설정하는 곳으로 임의로 이름 설정 가능하다.
   dbcpAPITest.jsp의 init.lookup("java:comp/env/jdbc/OralceDB");
   lookup() 메소드로 여기서 설정한 이름을 찾는다.
 
 2.auth="Container"
   DBCP를 관리할 관리자(Container or Application)로 컨테이너인 톰캣이 관리한다.
 
 3.type="javax.sql.DataSource"
   1번 resource의 return type이 DataSource라는 의미이며
   Connection 객체를 반환할 수 있다.
   예)DataSource ds = (DataSource) init.lookup("java:com/env/jdbc/OracleDB");
 
 4.username="scott" (DB의 계정명)
 
 5.password="tiger" (계정에 대한 비밀번호)
 
 6.driverClassName="oralce.jdbc.driver.OracleDriver"
 
 7.factory="org.apache.tomcat.dbcp.dbcp2.BasicDataSourceFactory"
   dbcp를 관리하는 클래스로 Factory 클래스를 이용하면 좀 더 안정적으로 관리할 수 있다.
 
 8.url="jdbc:oracle:thin:@127.0.0.1:1521:xe"
   DB의 접속 URL
   
 ***
 C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib
 ojdbc6.jar 파일 복사
 WEB-INF/lib 폴더에 붙여넣기
 
  -->