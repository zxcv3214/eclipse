<Context>
	<Resource
	name="jdbc/OracleDB"
	auth="Container"
	type="javax.sql.DataSource"
	username="scott"
	password="tiger"
	driverClassName="oracle.jdbc.driver.OracleDriver"
	factory="org.apache.tomcat.dbcp.dbcp2.BasicDataSourceFactory"
	url="jdbc:oracle:thin:@127.0.01:1521:xe"
	/>
	
</Context>
<!-- 
	context.xml 파일은 단일 Tomcat 웹 응용 프로그램에 대한 <context> 태그를 선택적 파일입니다.
	이것은 응용 프로그램, JNDI 자원 및 기타 설정에 대한 특정 동작을 정의하는 데 사용할 수 있습니다.
	context.xml 파일은 META-INF 폴더에 설치해야합니다.
	
	1.  name="jdbc/OracleDB"
		JNDI로 호출될 이름을 설정하는 곳으로 임의로 이름 설정 가능합니다.
		dbcpAPITest.jsp의 init.loopup("java:comp/env/jdbc/OracleDB");
		lookup() 메서드로 여기서 설정한 이름을 찾습니다.
	
	2.	auth="Container"
		DBCP를 관리할 관리자(Container or Application)로 컨테이너인 톰켓이 관리합니다.
		
	3.	type="javax.sql.DataSource"
		1번 resource의 return type이 DataSource라는 의미이며 Connection 객체를 반환 할 수 있다.
		예) DataSource ds = (DataSource) init.lookup("java:comp/env/jdbc/OracleDB");
		
	4.	username="scott"	(DB의 계정명)
	
	5.	password="tiger"	(계정에 대한 비밀번호)
	
	6.	driverClassName="oracle.jdbc.driver.OracleDriver"
		오라클 드라이버 이름(JDBC를 이용하기 위한 드라이버 클래스 입니다.)
		
	7.	factory="org.apache.tomcat.dbcp.dbcp2.BasicDataSourceFactory"
		dbcp를 관리하는 클래스로 Factory 클래스를 이용하면 좀 더 안정적으로 관리할 수 있습니다.
		
	8.	url="jdbc:oracle:thin:@127.0.0.1:1521:xe"
		DB의 접속 URL입니다.
		
	***
	C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib 폴더로 이동하세요.
	ojdbc6.jar 파일을 복사하세요
	WEB-INF/lib 폴더에 붙여넣기 하세요.
	
 -->